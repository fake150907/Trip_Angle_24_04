<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>

<!-- 제이쿼리 -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<!-- 테일윈드 -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.7/tailwind.min.css">

<script src="https://cdnjs.cloudflare.com/ajax/libs/dompurify/2.3.0/purify.min.js"></script>

<!-- 토스트 UI 에디터 코어 -->
<script src="https://uicdn.toast.com/editor/latest/toastui-editor-all.min.js"></script>
<link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/toastui-editor.min.css" />
<link rel="stylesheet" href="https://nhn.github.io/tui.editor/latest/dist/cdn/theme/toastui-editor-dark.css">

<!-- 토스트 UI 에디터 플러그인, 컬러피커 -->
<link rel="stylesheet" href="https://uicdn.toast.com/tui-color-picker/latest/tui-color-picker.css" />
<script src="https://uicdn.toast.com/tui-color-picker/latest/tui-color-picker.min.js"></script>

<link rel="stylesheet"
	href="https://uicdn.toast.com/editor-plugin-color-syntax/latest/toastui-editor-plugin-color-syntax.min.css" />
<script src="https://uicdn.toast.com/editor-plugin-color-syntax/latest/toastui-editor-plugin-color-syntax.min.js"></script>

<!-- 토스트 UI 차트 -->
<link rel="stylesheet" href="https://uicdn.toast.com/chart/latest/toastui-chart.css">
<script src="https://uicdn.toast.com/chart/latest/toastui-chart.js"></script>
<!-- 토스트 UI 차트와 토스트 UI 에디터를 연결  -->
<script src="https://uicdn.toast.com/editor-plugin-chart/latest/toastui-editor-plugin-chart.min.js"></script>

<!-- 토스트 UI 에디터 플러그인, 코드 신텍스 하이라이터 -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/themes/prism.min.css">
<link rel="stylesheet"
	href="https://uicdn.toast.com/editor-plugin-code-syntax-highlight/latest/toastui-editor-plugin-code-syntax-highlight.min.css">
<script
	src="https://uicdn.toast.com/editor-plugin-code-syntax-highlight/latest/toastui-editor-plugin-code-syntax-highlight-all.min.js"></script>

<!-- 토스트 UI 에디터 플러그인, 테이블 셀 병합 -->
<script
	src="https://uicdn.toast.com/editor-plugin-table-merged-cell/latest/toastui-editor-plugin-table-merged-cell.min.js"></script>

<!-- 토스트 UI 에디터 플러그인, katex -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.13.13/katex.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.13.13/katex.min.css">

<!-- 토스트 UI 에디터 플러그인, UML -->
<script src="https://uicdn.toast.com/editor-plugin-uml/latest/toastui-editor-plugin-uml.min.js"></script>



<style>
/* 토스트 UI */
.absolute {
	position: absolute;
}

.relative {
	position: relative;
}

.top-0 {
	top: 0;
}

.left-0 {
	left: 0;
}

.w-full {
	width: 100%;
}

.ratio-16\/9::after {
	content: "";
	display: block;
	padding-top: calc(100%/ 16 * 9);
}

.ratio-16\/9::after {
	content: "";
	display: block;
	padding-top: calc(100%/ 16 * 9);
}

.ratio-9\/16::after {
	content: "";
	display: block;
	padding-top: calc(100%/ 9 * 16);
}

.ratio-1\/1::after {
	content: "";
	display: block;
	padding-top: calc(100%/ 1 * 1);
}

.ratio-1\/2::after {
	content: "";
	display: block;
	padding-top: calc(100%/ 1 * 2);
}
/* 토스트 UI */
</style>

<script>

// const options = {
// 		  // ...
// 		  // 직접 입력하면서 커스터마이징 가능
// 		  // toolbarItems 뻬면 기본적인 툴바 다 사용하는 것
// 		  toolbarItems: [
// 		    ['heading', 'bold', 'italic', 'strike'],
// 		    ['hr', 'quote'],
// 		    ['ul', 'ol', 'task', 'indent', 'outdent'],
// 		    ['table', 'image', 'link'],
// 		    ['code', 'codeblock'],
// 		    ['scrollSync'],
// 		  ],
// 		};
		
// URL에서 파라미터를 추출하는 함수
function getUriParams(uri) {
  // 공백 제거
  uri = uri.trim();
  
  // '&amp;'를 '&'로 변환
  uri = uri.replaceAll("&amp;", "&");

  // URL에 '#'이 포함된 경우 '#' 이후의 문자열 제거
  if (uri.indexOf("#") !== -1) {
    let pos = uri.indexOf("#");
    uri = uri.substr(0, pos);
  }

  // 파라미터를 저장할 객체 초기화
  let params = {};

  // 정규 표현식을 사용하여 URL에서 파라미터를 추출
  uri.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (str, key, value) {
    params[key] = value;
  });

  // 파라미터 객체 반환
  return params;
}

//CodePen을 렌더링하는 플러그인 함수
function codepenPlugin() {
  // toHTMLRenderers 객체 정의
  const toHTMLRenderers = {
    // codepen 노드를 처리하는 함수
    codepen(node) {
      // codepen 노드를 HTML로 렌더링
      const html = renderCodepen(node.literal);

      // 렌더링 결과를 반환
      return [
        { type: "openTag", tagName: "div", outerNewLine: true },
        { type: "html", content: html },
        { type: "closeTag", tagName: "div", outerNewLine: true }
      ];
    }
  };

  // CodePen을 iframe으로 렌더링하는 함수
  function renderCodepen(uri) {
    // URL에서 파라미터를 추출
    let uriParams = getUriParams(uri);

    // 기본 높이를 400으로 설정
    let height = 400;

    // 파라미터에 height가 있으면 해당 값으로 설정
    if (uriParams.height) {
      height = uriParams.height;
    }

    // 기본 너비를 100%로 설정
    let width = "100%";

    // 파라미터에 width가 있으면 해당 값으로 설정
    if (uriParams.width) {
      width = uriParams.width;
    }

    // width가 숫자이면 'px' 단위를 추가
    if (!isNaN(width)) {
      width += "px";
    }

    // iframe의 URL을 설정
    let iframeUri = uri;

    // URL에 '#'이 포함된 경우 '#' 이후의 문자열 제거
    if (iframeUri.indexOf("#") !== -1) {
      let pos = iframeUri.indexOf("#");
      iframeUri = iframeUri.substr(0, pos);
    }

    // iframe HTML 문자열 생성 및 반환
    return (
      '<iframe height="' +
      height +
      '" style="width: ' +
      width +
      ';" scrolling="no" title="" src="' +
      iframeUri +
      '" frameborder="no" allowtransparency="true" allowfullscreen="true"></iframe>'
    );
  }

  // 플러그인 객체 반환
  return { toHTMLRenderers };
}
	// 유튜브 플러그인 끝

	// repl 플러그인 시작
// repl.it을 렌더링하는 플러그인 함수
function replPlugin() {
  // toHTMLRenderers 객체 정의
  const toHTMLRenderers = {
    // repl 노드를 처리하는 함수
    repl(node) {
      // repl 노드를 HTML로 렌더링
      const html = renderRepl(node.literal);

      // 렌더링 결과를 반환
      return [
        { type: "openTag", tagName: "div", outerNewLine: true },
        { type: "html", content: html },
        { type: "closeTag", tagName: "div", outerNewLine: true }
      ];
    }
  };

  // repl.it을 iframe으로 렌더링하는 함수
  function renderRepl(uri) {
    // URL에서 파라미터를 추출
    var uriParams = getUriParams(uri);

    // 기본 높이를 400으로 설정
    var height = 400;

    // 파라미터에 height가 있으면 해당 값으로 설정
    if (uriParams.height) {
      height = uriParams.height;
    }

    // iframe HTML 문자열 생성 및 반환
    return (
      '<iframe frameborder="0" width="100%" height="' +
      height +
      'px" src="' +
      uri +
      '"></iframe>'
    );
  }

  // 플러그인 객체 반환
  return { toHTMLRenderers };
}

// YouTube를 렌더링하는 플러그인 함수
function youtubePlugin() {
  // toHTMLRenderers 객체 정의
  const toHTMLRenderers = {
    // youtube 노드를 처리하는 함수
    youtube(node) {
      // youtube 노드를 HTML로 렌더링
      const html = renderYoutube(node.literal);

      // 렌더링 결과를 반환
      return [
        { type: "openTag", tagName: "div", outerNewLine: true },
        { type: "html", content: html },
        { type: "closeTag", tagName: "div", outerNewLine: true }
      ];
    }
  };

  // YouTube 동영상을 iframe으로 렌더링하는 함수
  function renderYoutube(uri) {
    // URL의 다양한 형식을 표준화된 형식으로 변환
    uri = uri.replace("https://www.youtube.com/watch?v=", "");
    uri = uri.replace("http://www.youtube.com/watch?v=", "");
    uri = uri.replace("www.youtube.com/watch?v=", "");
    uri = uri.replace("youtube.com/watch?v=", "");
    uri = uri.replace("https://youtu.be/", "");
    uri = uri.replace("http://youtu.be/", "");
    uri = uri.replace("youtu.be/", "");

    // URL에서 파라미터를 추출
    let uriParams = getUriParams(uri);

    // 기본 너비와 높이를 100%로 설정
    let width = "100%";
    let height = "100%";

    // 기본 최대 너비를 500으로 설정
    let maxWidth = 500;

    // 파라미터에 'max-width'가 없고 'ratio'가 '9/16'인 경우 기본 최대 너비를 300으로 설정
    if (!uriParams["max-width"] && uriParams["ratio"] == "9/16") {
      uriParams["max-width"] = 300;
    }

    // 파라미터에 'max-width'가 있으면 해당 값으로 설정
    if (uriParams["max-width"]) {
      maxWidth = uriParams["max-width"];
    }

    // 기본 비율을 16/9로 설정
    let ratio = "16/9";

    // 파라미터에 'ratio'가 있으면 해당 값으로 설정
    if (uriParams["ratio"]) {
      ratio = uriParams["ratio"];
    }

    // 기본 왼쪽 마진을 auto로 설정
    let marginLeft = "auto";

    // 파라미터에 'margin-left'가 있으면 해당 값으로 설정
    if (uriParams["margin-left"]) {
      marginLeft = uriParams["margin-left"];
    }

    // 기본 오른쪽 마진을 auto로 설정
    let marginRight = "auto";

    // 파라미터에 'margin-right'가 있으면 해당 값으로 설정
    if (uriParams["margin-right"]) {
      marginRight = uriParams["margin-right"];
    }

    // YouTube 동영상 ID 추출
    let youtubeId = uri;

    // URL에 '?'가 포함된 경우 '?' 이전의 문자열만 사용
    if (youtubeId.indexOf("?") !== -1) {
      let pos = uri.indexOf("?");
      youtubeId = youtubeId.substr(0, pos);
    }

    // YouTube 동영상을 iframe으로 렌더링하는 HTML 문자열 생성 및 반환
    return (
      '<div style="max-width:' +
      maxWidth +
      "px; margin-left:" +
      marginLeft +
      "; margin-right:" +
      marginRight +
      ';" class="ratio-' +
      ratio +
      ' relative"><iframe class="absolute top-0 left-0 w-full" width="' +
      width +
      '" height="' +
      height +
      '" src="https://www.youtube.com/embed/' +
      youtubeId +
      '" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>'
    );
  }

  // 플러그인 객체 반환
  return { toHTMLRenderers };
}

	// katex 플러그인
// KaTeX 플러그인 함수
function katexPlugin() {
  // toHTMLRenderers 객체 정의
  const toHTMLRenderers = {
    // katex 노드를 처리하는 함수
    katex(node) {
      // KaTeX 수식을 HTML로 렌더링
      let html = katex.renderToString(node.literal, {
        throwOnError: false
      });

      // 렌더링 결과를 반환
      return [
        { type: "openTag", tagName: "div", outerNewLine: true },
        { type: "html", content: html },
        { type: "closeTag", tagName: "div", outerNewLine: true }
      ];
    }
  };

  // 플러그인 객체 반환
  return { toHTMLRenderers };
}

// 차트 옵션 정의
const ToastEditor__chartOptions = {
  minWidth: 100,
  maxWidth: 600,
  minHeight: 100,
  maxHeight: 300
};

// Toast UI 에디터 초기화 함수
function ToastEditor__init() {
  // 모든 .toast-ui-editor 요소에 대해 반복
  $(".toast-ui-editor").each(function (index, node) {
    const $node = $(node); // jQuery 객체로 변환
    const $initialValueEl = $node.find(" > script"); // 자식 script 요소 찾기
    const initialValue =
      $initialValueEl.length == 0 ? "" : $initialValueEl.html().trim(); // 초기 값 설정
    
    const theme = localStorage.getItem('theme') ?? "light"; // 테마 설정

    // Toast UI 에디터 인스턴스 생성
    const editor = new toastui.Editor({
      el: node, // 에디터를 삽입할 DOM 요소
      previewStyle: "vertical", // 미리보기 스타일
      initialValue: initialValue, // 초기 값
      height: "600px", // 에디터 높이
      theme: theme, // 테마
      plugins: [
        [toastui.Editor.plugin.chart, ToastEditor__chartOptions], // 차트 플러그인
        [toastui.Editor.plugin.codeSyntaxHighlight, { highlighter: Prism }], // 코드 하이라이팅 플러그인
        toastui.Editor.plugin.colorSyntax, // 색상 플러그인
        toastui.Editor.plugin.tableMergedCell, // 테이블 병합 셀 플러그인
        toastui.Editor.plugin.uml, // UML 플러그인
        katexPlugin, // KaTeX 플러그인
        youtubePlugin, // 유튜브 플러그인
        codepenPlugin, // 코드펜 플러그인
        replPlugin // repl.it 플러그인
      ],
      // 커스텀 HTML Sanitizer 설정
      customHTMLSanitizer: (html) => {
        return (
          DOMPurify.sanitize(html, {
            ADD_TAGS: ["iframe"], // 허용할 태그 추가
            ADD_ATTR: [
              "width",
              "height",
              "allow",
              "allowfullscreen",
              "frameborder",
              "scrolling",
              "style",
              "title",
              "loading",
              "allowtransparency"
            ]
          }) || ""
        );
      }
    });

    // 에디터 인스턴스를 jQuery 데이터로 저장
    $node.data("data-toast-editor", editor);
  });
}

// Toast UI 뷰어 초기화 함수
function ToastEditorView__init() {
  // 모든 .toast-ui-viewer 요소에 대해 반복
  $(".toast-ui-viewer").each(function (index, node) {
    const $node = $(node); // jQuery 객체로 변환
    const $initialValueEl = $node.find(" > script"); // 자식 script 요소 찾기
    const initialValue =
      $initialValueEl.length == 0 ? "" : $initialValueEl.html().trim(); // 초기 값 설정
    $node.empty(); // 요소 내용 비우기
    
    const theme = localStorage.getItem('theme') ?? "light"; // 테마 설정

    // Toast UI 뷰어 인스턴스 생성
    let viewer = new toastui.Editor.factory({
      el: node, // 뷰어를 삽입할 DOM 요소
      initialValue: initialValue, // 초기 값
      viewer: true, // 뷰어 모드
      theme: theme, // 테마
      plugins: [
        [toastui.Editor.plugin.codeSyntaxHighlight, { highlighter: Prism }], // 코드 하이라이팅 플러그인
        toastui.Editor.plugin.colorSyntax, // 색상 플러그인
        toastui.Editor.plugin.tableMergedCell, // 테이블 병합 셀 플러그인
        toastui.Editor.plugin.uml, // UML 플러그인
        katexPlugin, // KaTeX 플러그인
        youtubePlugin, // 유튜브 플러그인
        codepenPlugin, // 코드펜 플러그인
        replPlugin // repl.it 플러그인
      ],
      // 커스텀 HTML Sanitizer 설정
      customHTMLSanitizer: (html) => {
        return (
          DOMPurify.sanitize(html, {
            ADD_TAGS: ["iframe"], // 허용할 태그 추가
            ADD_ATTR: [
              "width",
              "height",
              "allow",
              "allowfullscreen",
              "frameborder",
              "scrolling",
              "style",
              "title",
              "loading",
              "allowtransparency"
            ]
          }) || ""
        );
      }
    });

    // 뷰어 인스턴스를 jQuery 데이터로 저장
    $node.data("data-toast-editor", viewer);
  });
}

// 문서가 준비되었을 때 에디터와 뷰어 초기화 함수 호출
$(function () {
  ToastEditor__init();
  ToastEditorView__init();
});

</script>